version: "3.7"
services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    command:
      - --serversTransport.insecureSkipVerify=true # support backend https services without passhthrough
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      # - --providers.docker.defaultrule=Host(`{{ index .Labels \cname\}}.$domain`)
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      # - --entrypoints.tcp.address=:443 # support backend https services with passthrough
      - --entrypoints.websecure.address=:443
      # cloudflare headers + LAN will be trusted
      - --entrypoints.websecure.forwardedHeaders.trustedIPs=${IPLIST}
      - --entryPoints.websecure.proxyProtocol.trustedIPs=172.16.0.0/12
      - --entrypoints.websecure.http.tls.domains[0].main=${domain}
      - --entrypoints.websecure.http.tls.domains[0].sans=*.${domain}
      - --certificatesresolvers.le.acme.dnschallenge=true
      - --certificatesresolvers.le.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.le.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --certificatesresolvers.le.acme.email=${cf_email}
      - --certificatesresolvers.le.acme.storage=/etc/traefik/acme.json
      - --entrypoints.websecure.http.tls.certResolver=le
      # - --certificatesresolvers.le.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory # staging for test
      - --providers.file.filename=/etc/traefik/dynamic.yaml
      - --providers.file.watch=true
      - --accesslog=true
      - --accesslog.filepath=/etc/traefik/access.log
      - --api.insecure=true
      - --entrypoints.traefik.address=:58080
      # - --log.filePath=/etc/traefik/traefik.log
      # - --log.level=DEBUG

    environment:
      TZ: ${TZ}
      CF_API_EMAIL: ${cf_email}
      CF_API_KEY: ${cf_api}

    labels:
      traefik.enable: "true"
      traefik.http.routers.api.rule: Host(`tra.${domain}`)
      traefik.http.routers.api.service: api@internal
      traefik.http.services.api-svc.loadbalancer.server.port: 8080

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./:/etc/traefik
    network_mode: host

  whoami:
    image: "traefik/whoami"
    container_name: "whoami"
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.rule=Host(`who.mrx.taliops.com`)
